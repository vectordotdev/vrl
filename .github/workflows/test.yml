name: Test Suite

on:
  pull_request:
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - main

concurrency:
  # For pull requests, cancel running workflows, for main, run all
  #
  # `github.event.number` exists for pull requests, otherwise fall back to SHA
  # for main
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: full
  TEST_LOG: vector=debug
  VERBOSE: true
  CI: true
  PROFILE: debug

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: "clippy"
        run: ./scripts/clippy.sh

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: "Format check"
        run: ./scripts/format_check.sh

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: "Tests"
        run: ./scripts/tests.sh

  vrl:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: "VRL tests"
        run: ./scripts/vrl_tests.sh

  check-features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: "Check that all features can compile"
        run: ./scripts/check_features.sh

  check-licenses:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: "Check that the 3rd-party license file is up to date"
        run: ./scripts/check_licenses.sh

  check-msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: "Check that the MSRV is up to date"
        run: ./scripts/check_msrv.sh

  wasm32-unknown-unknown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: "Check wasm32-unknown-unknown target"
        run: ./scripts/check_wasm32.sh
