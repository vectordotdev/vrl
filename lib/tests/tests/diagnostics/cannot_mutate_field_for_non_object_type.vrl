# result:
#
# error[E642]: parent path segment rejects this mutation
#   ┌─ :4:5
#   │
# 4 │ foo.bar = {}
#   │ --- ^^^ querying a field of a non-object type is unsupported
#   │ │
#   │ this path resolves to a value of type string
#   │
#   = try: change parent value to object, before assignment
#   =
#   =     foo = {}
#   =     foo.bar = {  }
#   =
#   = see documentation about error handling at https://errors.vrl.dev/#handling
#   = see language documentation at https://vrl.dev
#   = try your code in the VRL REPL, learn more at https://vrl.dev/examples
#
# error[E642]: parent path segment rejects this mutation
#   ┌─ :5:9
#   │
# 5 │ foo.bar.baz = "baz"
#   │ ------- ^^^ querying a field of a non-object type is unsupported
#   │ │
#   │ this path resolves to a value of type undefined
#   │
#   = try: change parent value to object, before assignment
#   =
#   =     foobar = {}
#   =     foobar.baz = "baz"
#   =
#   = see documentation about error handling at https://errors.vrl.dev/#handling
#   = see language documentation at https://vrl.dev
#   = try your code in the VRL REPL, learn more at https://vrl.dev/examples
#
# error[E642]: parent path segment rejects this mutation
#   ┌─ :8:2
#   │
# 8 │ .bar = "bar"
#   │ -^^^ querying a field of a non-object type is unsupported
#   │ │
#   │ this path resolves to a value of type string
#   │
#   = try: change parent value to object, before assignment
#   =
#   =     . = {}
#   =     .bar = "bar"
#   =
#   = see documentation about error handling at https://errors.vrl.dev/#handling
#   = see language documentation at https://vrl.dev
#   = try your code in the VRL REPL, learn more at https://vrl.dev/examples
#
# error[E642]: parent path segment rejects this mutation
#    ┌─ :11:6
#    │
# 11 │ .foo.bar = "bar"
#    │ ---- ^^^ querying a field of a non-object type is unsupported
#    │ │
#    │ this path resolves to a value of type boolean
#    │
#    = try: change parent value to object, before assignment
#    =
#    =     .foo = {}
#    =     .foo.bar = "bar"
#    =
#    = see documentation about error handling at https://errors.vrl.dev/#handling
#    = see language documentation at https://vrl.dev
#    = try your code in the VRL REPL, learn more at https://vrl.dev/examples


foo = "foo"
foo.bar = {}
foo.bar.baz = "baz"

. = "foo"
.bar = "bar"

. = { "foo": true }
.foo.bar = "bar"

foo = 42

foo = {}
foo.bar = {}
foo.bar.baz = []
